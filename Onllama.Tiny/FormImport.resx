<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>